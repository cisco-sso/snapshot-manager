/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/cisco-sso/snapshot-manager/pkg/apis/snapshotmanager/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SnapshotRevertLister helps list SnapshotReverts.
type SnapshotRevertLister interface {
	// List lists all SnapshotReverts in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.SnapshotRevert, err error)
	// SnapshotReverts returns an object that can list and get SnapshotReverts.
	SnapshotReverts(namespace string) SnapshotRevertNamespaceLister
	SnapshotRevertListerExpansion
}

// snapshotRevertLister implements the SnapshotRevertLister interface.
type snapshotRevertLister struct {
	indexer cache.Indexer
}

// NewSnapshotRevertLister returns a new SnapshotRevertLister.
func NewSnapshotRevertLister(indexer cache.Indexer) SnapshotRevertLister {
	return &snapshotRevertLister{indexer: indexer}
}

// List lists all SnapshotReverts in the indexer.
func (s *snapshotRevertLister) List(selector labels.Selector) (ret []*v1alpha1.SnapshotRevert, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SnapshotRevert))
	})
	return ret, err
}

// SnapshotReverts returns an object that can list and get SnapshotReverts.
func (s *snapshotRevertLister) SnapshotReverts(namespace string) SnapshotRevertNamespaceLister {
	return snapshotRevertNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SnapshotRevertNamespaceLister helps list and get SnapshotReverts.
type SnapshotRevertNamespaceLister interface {
	// List lists all SnapshotReverts in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.SnapshotRevert, err error)
	// Get retrieves the SnapshotRevert from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.SnapshotRevert, error)
	SnapshotRevertNamespaceListerExpansion
}

// snapshotRevertNamespaceLister implements the SnapshotRevertNamespaceLister
// interface.
type snapshotRevertNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SnapshotReverts in the indexer for a given namespace.
func (s snapshotRevertNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SnapshotRevert, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SnapshotRevert))
	})
	return ret, err
}

// Get retrieves the SnapshotRevert from the indexer for a given namespace and name.
func (s snapshotRevertNamespaceLister) Get(name string) (*v1alpha1.SnapshotRevert, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("snapshotrevert"), name)
	}
	return obj.(*v1alpha1.SnapshotRevert), nil
}
